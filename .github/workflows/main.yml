name: CI
on:
  push:
    branches:
      - main
      - test
jobs:
  test:
    name: Lint, typecheck & test
    runs-on: ubuntu-latest

    # Start a Postgres instance, which is used during tests
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      # This needs to match the POSTGRES_* env variables set in the Postgres service above
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Cache node_modules for faster CI runs if the yarn.lock doesn't change change
      - name: Get yarn cache directory path
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # Throw an error if the yarn.lock file doesn't match the installed dependencies (rather than updating it in-place, which it does by default locally)
      - name: Install
        run: yarn install --frozen-lockfile --silent

      - name: Copy example env
        run: cp .env.example .env

      - name: Generate
        run: yarn generate

      - name: Migrate the CI database
        run: yarn prisma:migrate

      - name: Lint
        run: yarn lint

      - name: Typecheck
        run: yarn typecheck

      - name: Tests (Jest)
        run: yarn test

      - name: End-to-end tests (Cypress)
        uses: cypress-io/github-action@v4
        with:
          install-command: yarn --frozen-lockfile --silent
          build: yarn build
          start: yarn start:ci
          wait-on: http://localhost:3000
