generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator pothos {
  provider = "prisma-pothos-types"
  output   = "../graphql/pothos-types.generated.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                @id @default(cuid())
  createdAt            DateTime              @default(now())
  modifiedAt           DateTime              @default(now())
  email                String                @unique
  emailVerified        DateTime?
  image                String?
  coverImageUrl        String?
  accounts             Account[]
  sessions             Session[]
  alias                String?               @unique
  name                 String?
  firstName            String?
  lastName             String?
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  created_at               Int?
  id_token                 String? @db.Text
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
