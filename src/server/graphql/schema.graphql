type Api implements Node {
  accessToken: String
  apiConnector: ApiConnector
  apiResponses: [ApiResponse!]
  createdAt: String
  extension: Extension
  id: ID!
  isExpired: Boolean
  modifiedAt: String
}

type ApiConnector implements Node {
  createdAt: String
  id: ID!
  markdown: String
  modifiedAt: String
  name: String
}

type ApiConnectorRoute implements Node {
  createdAt: String
  id: ID!
  modifiedAt: String
  name: String
  url: String
}

type ApiResponse implements Node {
  api: Api
  apiConnectorRoute: ApiConnectorRoute
  createdAt: String
  id: ID!
  modifiedAt: String
  response: JSON
}

type Extension implements Node {
  createdAt: String
  id: ID!
  modifiedAt: String
  site: Site
  sortOrder: Int
  storeExtension: StoreExtension
  underlayingApis: [Api!]
  urls: [String!]
}

scalar JSON

type Mutation {
  createApi(accessToken: String, apiConnectorId: String, extensionId: String): Api
  createLinkedInExtension(linkedInUrl: String, siteId: String, storeExtensionId: String): Extension
  createOAuthExtension(accessToken: String, apiConnectorId: String, siteId: String, storeExtensionId: String): Extension
  createWebLinkExtension(siteId: String, storeExtensionId: String, webLinks: [String!]): Extension
  updateUser(alias: String, coverImageUrl: String, firstName: String, image: String, lastName: String): User
  upsertApiResponse(apiConnectorRouteId: String, apiId: String, response: String): ApiResponse
  upsertSite(bio: String!, subdomain: String!, tagline: String!): Site
}

interface Node {
  id: ID!
}

type Query {
  currentUser: User
  getSite(subdomain: String!): Site
  getValidAlias(alias: String): User
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
}

type Site implements Node {
  bio: String
  createdAt: String
  extensions: [Extension!]
  id: ID!
  modifiedAt: String
  subdomain: String
  tagline: String
}

type StoreExtension implements Node {
  createdAt: String
  id: ID!
  markdown: String
  modifiedAt: String
  name: String
}

type User implements Node {
  alias: String
  coverImageUrl: String
  email: String
  firstName: String
  fullName: String
  id: ID!
  image: String
  lastName: String
  mainSite: Site
  name: String
  sites: [Site!]
}